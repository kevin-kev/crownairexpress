import { CompatabilityPluginRawConfig } from './index';
import { BaseVisitor } from '@graphql-codegen/visitor-plugin-common';
import { GraphQLSchema, OperationDefinitionNode, OperationTypeNode, FragmentDefinitionNode } from 'graphql';
import { ParsedConfig } from '@graphql-codegen/visitor-plugin-common';
import { SelectionSetToObjectResult } from './selection-set-to-types';
export interface CompatabilityPluginConfig extends ParsedConfig {
    reactApollo: any;
    noNamespaces: boolean;
    strict: boolean;
}
export declare class CompatabilityPluginVisitor extends BaseVisitor<CompatabilityPluginRawConfig, CompatabilityPluginConfig> {
    private _schema;
    constructor(rawConfig: CompatabilityPluginRawConfig, _schema: GraphQLSchema, options: {
        reactApollo: any;
    });
    protected getRootType(operationType: OperationTypeNode): string;
    protected buildOperationBlock(node: OperationDefinitionNode): SelectionSetToObjectResult;
    protected buildFragmentBlock(node: FragmentDefinitionNode): SelectionSetToObjectResult;
    protected printTypes(selectionSetTypes: SelectionSetToObjectResult): string;
    FragmentDefinition(node: FragmentDefinitionNode): string;
    OperationDefinition(node: OperationDefinitionNode): string;
}
